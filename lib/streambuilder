
StreamBuilder(
                stream: FirebaseFirestore.instance
                    .collection('articles')
                    .snapshots(),
                builder: (context, AsyncSnapshot<QuerySnapshot> snapshot) {
                  return GridView.builder(
                      shrinkWrap: true,
                      itemCount: snapshot.data?.docs.length,
                      gridDelegate: SliverGridDelegateWithFixedCrossAxisCount(
                          crossAxisCount: 2,
                          crossAxisSpacing: 6,
                          mainAxisSpacing: 3),
                      itemBuilder: (context, i) {
                       if (snapshot.hasData) {
                              QueryDocumentSnapshot x = snapshot.data!.docs[i];
                              return Padding(
                                padding: const EdgeInsets.all(8.0),
                                child: Column(children: [
                                  Container(
                                      margin: EdgeInsets.all(10),
                                      padding: EdgeInsets.all(5),
                                      height: 50,
                                      width: 100,
                                      decoration: BoxDecoration(
                                        color: Colors.orange.shade300,
                                        borderRadius: BorderRadius.circular(10),
                                      ),
                                      child: Column(
                                        children: [
                                            Container(
                                        padding: EdgeInsets.all(4),
                                        height: 96,
                                        decoration: BoxDecoration(
                                            borderRadius:
                                                BorderRadius.circular(25),
                                            image: DecorationImage(
                                                image: NetworkImage(
                                                    '${x['image']}'),
                                                fit: BoxFit.cover)),
                                      ),
                                      Text('${x['libelle']}'),
                                      Text('${x['prix']}F CFA'),
                                        ],
                                      )),
                                ]),
                              );
                            }
                            if (!snapshot.hasData) {
                              return Container(
                                height: 70,
                                width: 70,
                                child: const CircularProgressIndicator(),
                              );
                            }
                            return Container(
                              child: Column(
                                children: [
                                  Text('chargement en cours'),
                                  CircularProgressIndicator(),
                                ],
                              ),
                            );
                        return CircularProgressIndicator();
                      });
                })